name: Build

on:
  push:

jobs:
  build:
    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: macos-latest
            arch: arm64
          - os: windows-latest
            arch: arm64
    steps:
      - name: Checks-out
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2.4.2
        with:
          node-version: '16.10.0'
      - run: make release-client
      - run: make release-server
      - name: Create Release for binaries
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Creating Release for ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Binary_artifact_${{ ansible_os_family }}
          path: bin/
      - name: Attach artifact to Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/
          asset_name: binary_${{ playbook_distribution | lower }}_${{ ansible_architecture }}
          asset_content_type: application/zip
          asset_label: Binary Built on ${{ ansible_distribution }} ${{ ansible_distribution_version }}_${{ ansible_architecture }} at ${{ getDateTime }}.
        when: steps.create_release.outputs.release_id != ''
